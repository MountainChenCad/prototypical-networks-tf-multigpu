[TRAIN]
    # Dataset name
    data.dataset = mini-imagenet
    # Name of the splitting
    data.split = ravi
    # Number of classes in train
    data.train_way = 30
    # Number of support examples
    data.train_support = 5
    # Number of query examples
    data.train_query = 15
    # Number of classes in validation
    data.test_way = 5
    # Number of support examples in validation
    data.test_support = 5
     # Number query examples in validation
    data.test_query = 15
    # Number of episodes in one epoch
    data.episodes = 100
    # Flag to use CUDA
    data.cuda = 0
    # Number of GPU if data.cuda is set to 1
    data.gpu = 0

    data.rotation_range = 10
    data.width_shift_range = 0.10
    data.height_shift_range = 0.10
    data.horizontal_flip = True

    # 0.33, 0.5, 0.64, 0.75
    data.train_size = 0.75
    data.test_size = 0.25
    data.batch_size = 16

    # Data dimenstions (width,height,channels)
    model.x_dim = 84,84,3
    # Embedding dimension
    model.z_dim = 64
    # Path to the saved model
    model.save_path = ./results/imagenet/protonet/checkpoints/checkpoint.imagenet2019_protonet_{}_{}.h5
    # <type> = vanilla | augmentation
    model.type = augmentation

    model.nb_layers = 4
    model.nb_filters = 64

    # Flag to write output to file
    output.write = 1
    # Path to debug info
    output.train_path = ./results/imagenet/protonet/results/imagenet_protonet_{}_{}.csv
    # Config file
    output.config_path = ./results/imagenet/protonet/config/imagenet_protonet_{}_{}.json
    # tensorboard summary
    summary.save_path = ./results/imagenet/protonet/summaries/{}/imagenet_protonet_{}_{}

    # Number of epochs to train
    train.epochs = 300
    # Name of the optimizer
    train.optim_method = Adam
    # Learning rate
    train.lr = 0.001
    # Early stopping patience
    train.patience = 15

[EVAL]
    # data
    data.dataset = mini-imagenet
    data.split = ravi
    data.test_way = 5
    data.test_support = 5
    data.test_query = 5
    data.episodes = 1000
    data.cuda = 1
    data.gpu = 0
    
    model.nb_layers = 4
    model.nb_filters = 64

    data.rotation_range = 10
    data.width_shift_range = 0.10
    data.height_shift_range = 0.10
    data.horizontal_flip = True

    # 0.33, 0.5, 0.64, 0.75
    data.train_size = 0.75
    data.test_size = 0.25
    data.batch_size = 16

    # model
    model.x_dim = 84,84,3
    # you should write the complete path to run an specific model
    model.save_path = ./results/imagenet/protonet/checkpoints/checkpoint.imagenet2019_protonet_{}_{}.h5
    model.type = augmentation
